# Load libraries
library(raster)
library(circlize)

# Set working directory
setwd("D:/SCHOOLING/PhD STUDIES/RESEARCH/DISSERTATION/DATA/LULCC/RESEARCH WORK/NEW LULC_v1/CHORD DIAGRAMS/ANALYSIS")

# Define LULC classes and colors
lulc_classes <- c("Built up area", "Agriculture", "Forest", "Mangrove", "Barren", "Water")
lulc_colors <- setNames(c("#D72631","#F4D35E","#7FB069","#9B5DE5","#FF48C4","#17C3B2"), lulc_classes)

# Load rasters for 2002 and 2012
cat("Loading LULC rasters for 2002 and 2012...\n")
lulc_2002 <- raster("LULC 2002.tif")
lulc_2012 <- raster("LULC 2012.tif")

# Validate compatibility
if (!compareRaster(lulc_2002, lulc_2012, extent=TRUE, rowcol=TRUE, crs=TRUE, res=TRUE)) {
  stop("ERROR: The rasters do not match!")
} else cat("Raster properties match.\n")

# Extract values and remove NAs
v1 <- getValues(lulc_2002)
v2 <- getValues(lulc_2012)
valid <- !is.na(v1) & !is.na(v2)
v1 <- v1[valid]
v2 <- v2[valid]

# Build transition matrix
tm <- matrix(0, nrow=6, ncol=6, dimnames=list(lulc_classes, lulc_classes))
for (k in seq_along(v1)) {
  i <- v1[k]; j <- v2[k]
  if (i >= 1 && i <= 6 && j >= 1 && j <= 6) tm[i, j] <- tm[i, j] + 1
}
write.csv(tm, "transition_matrix_2002_2012.csv", row.names=TRUE)

# Total pixels
total_pixels <- sum(tm)

# Compute positions for links
row_totals <- rowSums(tm)
col_totals <- colSums(tm)
get_positions <- function(vals, total) {
  if (total == 0) return(list(starts=numeric(0), ends=numeric(0)))
  props <- vals / total
  starts <- cumsum(c(0, props))[1:length(vals)]
  ends <- starts + props
  list(starts=starts, ends=ends)
}
from_pos <- lapply(seq_len(6), function(i) get_positions(tm[i,], row_totals[i]))
to_pos   <- lapply(seq_len(6), function(j) get_positions(tm[,j], col_totals[j]))

# Prepare TIFF output
tiff("chord_equal_sectors_nonoverlap_2002_2012.tiff", width=6, height=6, units="in", res=600, compression="lzw")
par(mar=rep(0,4), oma=rep(0,4), xpd=NA)

# Initialize circos
circos.clear()
circos.par(start.degree=90, gap.degree=3, track.margin=c(0,0), cell.padding=c(0,0,0,0))
circos.initialize(factors=lulc_classes, xlim=matrix(c(rep(0,6), rep(1,6)), ncol=2))

# First track (outer) with LULC class labels
circos.trackPlotRegion(
  track.index = 1, ylim = c(0, 1), track.height = 0.15,
  bg.col = lulc_colors, bg.border = "black",
  panel.fun = function(x, y) {
    sec <- get.cell.meta.data("sector.index")
    xlim <- get.cell.meta.data("xlim"); ylim <- get.cell.meta.data("ylim")
    circos.text(mean(xlim), mean(ylim), labels = sec,
                facing = "bending.inside", niceFacing = TRUE,
                cex = 1.0, col = "black", family = "Times New Roman")
  }
)

# Second (empty) buffer track
circos.trackPlotRegion(track.index = 2, ylim = c(0, 1), track.height = 0.05,
                       bg.col = NA, bg.border = NA, panel.fun = function(x, y) {})

# Draw non-overlapping links
min_lwd <- 0.5; max_lwd <- 15
for (i in seq_len(6)) {
  for (j in seq_len(6)) {
    val <- tm[i, j]
    if (val > 0) {
      rp <- from_pos[[i]]
      tp <- to_pos[[j]]
      x1 <- c(rp$starts[j], rp$ends[j])
      x2 <- c(tp$starts[i], tp$ends[i])
      prop <- val / total_pixels
      lwd_val <- min_lwd + prop * (max_lwd - min_lwd)
      circos.link(sector.index1=lulc_classes[i], point1=x1,
                  sector.index2=lulc_classes[j], point2=x2,
                  col=adjustcolor(lulc_colors[lulc_classes[i]], alpha.f=0.4),
                  border=NA, lwd=lwd_val)
    }
  }
}

# Tick marks and percentage labels
tick_positions <- seq(0, 1, length.out = 10)
label_positions <- tick_positions[c(2,4,6,8,10)]
label_texts <- c("20%", "40%", "60%", "80%", "100%")

op <- par(family = "Times New Roman")
for (i in seq_along(lulc_classes)) {
  # Exterior ticks (length = 0.2)
  circos.axis(
    h = "top", major.at = tick_positions, labels = rep("", 10),
    sector.index = lulc_classes[i], track.index = 1,
    col = "black", lwd = 0.5, major.tick.length = 0.2
  )
  
  # Percentage labels just above the ticks
  for (j in seq_along(label_positions)) {
    x <- label_positions[j]
    y <- 1.22
    circos.text(
      x = x, y = y,
      labels = label_texts[j],
      sector.index = lulc_classes[i], track.index = 1,
      facing = "outside", niceFacing = TRUE,
      cex = 0.58, col = "black", family = "Times New Roman"
    )
  }
}
par(op)

# Save TIFF
dev.off()
cat("âœ” Saved: chord_equal_sectors_nonoverlap_2002_2012.tiff\n")
